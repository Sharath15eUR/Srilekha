#include <stdio.h>
#include <stdlib.h>
#include <pthread.h>
#include <unistd.h>
#include <stdbool.h>
#include <time.h>

int N = 10; // Predefined value for online compiler
#define RUN_TIME 10 // Reduced runtime for online compiler

bool is_prime(int num) {
    if (num < 2) return false;
    for (int i = 2; i*i <= num; i++) {
        if (num % i == 0) return false;
    }
    return true;
}

void* sum_primes(void* arg) {
    int count = 0, num = 2, sum = 0;
    while (count < N) {
        if (is_prime(num)) {
            sum += num;
            count++;
        }
        num++;
    }
    printf("Sum of first %d prime numbers: %d\n", N, sum);
    return NULL;
}

void* thread1_func(void* arg) {
    time_t start = time(NULL);
    while (time(NULL) - start < RUN_TIME) {
        printf("Thread 1 running\n");
        sleep(1);
    }
    return NULL;
}

void* thread2_func(void* arg) {
    time_t start = time(NULL);
    while (time(NULL) - start < RUN_TIME) {
        printf("Thread 2 running\n");
        sleep(3);
    }
    return NULL;
}

int main() {
    pthread_t threadA, threadB, threadC;

    pthread_create(&threadA, NULL, sum_primes, NULL);
    pthread_create(&threadB, NULL, thread1_func, NULL);
    pthread_create(&threadC, NULL, thread2_func, NULL);

    pthread_join(threadA, NULL);
    pthread_join(threadB, NULL);
    pthread_join(threadC, NULL);

    return 0;
}
